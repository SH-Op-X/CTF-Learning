import base64

a = base64.b64decode("")
with open("out.tmp", "wb") as f:
    f.write(a)


from Crypto.Cipher import AES
aes_key = 0x16157E2B.to_bytes(4, "little") + 0xA6D2AE28.to_bytes(4, "little") + 0x8815F7AB.to_bytes(4, "little") + 0x3C4FCF09.to_bytes(4, "little")
aes_cipher = 0x79C7EA1F.to_bytes(4, "little") + 0x82F83B55.to_bytes(4, "little") + 0x8054B351.to_bytes(4, "little") + 0x75B6A6CF.to_bytes(4, "little")
aes = AES.new(aes_key, AES.MODE_ECB)
print(aes.decrypt(aes_cipher).decode())